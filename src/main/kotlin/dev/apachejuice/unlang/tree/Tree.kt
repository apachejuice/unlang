package dev.apachejuice.unlang.tree

import dev.apachejuice.unlang.debug.TagData
import dev.apachejuice.unlang.scope.LexicalScope
import dev.apachejuice.unlang.token.WithRange

/**
 * Base interface for anything that a [Parser] outputs.
 */
interface Tree : WithRange {
    /**
     * The maximum amount of child trees this tree can contain.
     * 'Child tree' is defined as the largest elements that are separable at the level of the tree. This means that
     * for example, for an element containing a block of code the block is handled as a single tree.
     *
     * If no limit is in place, -1 is used.
     */
    val treeArity: Int

    /**
     * The direct children of this tree.
     */
    val children: List<Tree>

    /**
     * Tag data associated with this tree.
     *
     * This is a debugging property: there is no guarantee what sort of data does the tag data contain.
     * These may be trees parsed that are related to this tree, pre-parse regions, context info or parser state.
     */
    val tagData: TagData

    /**
     * Some arbitrary tree ID generated by the parser.
     *
     * This is a debugging property.
     */
    val treeId: String
}